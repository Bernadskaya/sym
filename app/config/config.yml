imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @AntAdminBundle/Resources/config/admin.yml }
    - { resource: @AntWebBundle/Resources/config/ant_config.yml }
    - { resource: @AntUserBundle/Resources/config/config.yml }
    - { resource: @AntQuestBundle/Resources/config/services.yml }

framework:
    #esi:             ~
    translator: { fallback: ru }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~


# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        ['AntWebBundle']
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }
    delivery_address:     bernadskaya@gmail.com



sonata_media:
    # if you don't use default namespace configuration
    class:
        media: Ant\MediaBundle\Entity\Media
        gallery: Ant\MediaBundle\Entity\Gallery
        gallery_has_media: Ant\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
            formats:
                small: { width: 200 , quality: 100}
                big:   { width: 1500 , quality: 100}
    cdn:
        server:
            path:  # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false
    providers:
        image:
            thumbnail:  sonata.media.thumbnail.liip_imagine
        vimeo:
            thumbnail:  sonata.media.thumbnail.liip_imagine
        youtube:
            thumbnail:  sonata.media.thumbnail.liip_imagine
        dailymotion:
            thumbnail:  sonata.media.thumbnail.liip_imagine
liip_imagine:
    filter_sets:
        default_small:
            quality: 100
            controller_action: 'SonataMediaBundle:Media:liipImagineFilter'
            filters:
                thumbnail: { size: [100, 70], mode: outbound }
        default_big:
            quality: 75
            controller_action: 'SonataMediaBundle:Media:liipImagineFilter'
            filters:
                thumbnail: { size: [500, 300], mode: outbound }
        default_gallery:
            quality: 75
            controller_action: 'SonataMediaBundle:Media:liipImagineFilter'
            filters:
                thumbnail: { size: [500, 300], mode: outbound }
        admin:
            quality: 75
            controller_action: 'SonataMediaBundle:Media:liipImagineFilter'
            filters:
                thumbnail: { size: [500, 300], mode: outbound }